{"version":3,"sources":["../src/pool.js"],"names":["map","envVar","process","env","pool","size","Number","SLACK_POOL_SIZE","path","require","resolve","server","scopes","SLACK_SCOPE","split","slackClient","clientID","SLACK_CLIENTID","clientSecret","SLACK_CLIENTSECRET","storage","listen","port","PORT","close","stop","exit","on"],"mappings":";;AAAA;;;;AACA;;AACA;;;;;;;;AAEA,2EAA2EA,GAA3E,CAA+EC,UAC7E,sBAAOC,QAAQC,GAAR,CAAYF,MAAZ,CAAP,EAA6B,6BAA4BA,MAAO,EAAhE,CADF;;AAIA,MAAMG,OAAO,gBAAS;AACpBC,QAAMC,OAAOJ,QAAQC,GAAR,CAAYI,eAAnB,CADc;AAEpBC,QAAMC,QAAQC,OAAR,CAAgB,OAAhB;AAFc,CAAT,CAAb;;AAKA,MAAMC,SAAS,kBAAW;AACxBP,MADwB;AAExBQ,UAAQV,QAAQC,GAAR,CAAYU,WAAZ,CAAwBC,KAAxB,CAA8B,GAA9B,CAFgB;AAGxBC,eAAa;AACXC,cAAUd,QAAQC,GAAR,CAAYc,cADX;AAEXC,kBAAchB,QAAQC,GAAR,CAAYgB;AAFf,GAHW;AAOxBC,WAAS;AAPe,CAAX,CAAf;;AAUAT,OAAOU,MAAP,CAAc,EAAEC,MAAMhB,OAAOJ,QAAQC,GAAR,CAAYoB,IAAnB,KAA4B,IAApC,EAAd;;AAEA,MAAMC;AAAA,+BAAQ,aAAY;AACxB,UAAMb,OAAOc,IAAP,EAAN;AACAvB,YAAQwB,IAAR,CAAa,CAAb;AACD,GAHK;;AAAA;AAAA;AAAA;AAAA,IAAN;AAIAxB,QAAQyB,EAAR,CAAW,QAAX,EAAqBH,KAArB;AACAtB,QAAQyB,EAAR,CAAW,SAAX,EAAsBH,KAAtB","file":"pool.js","sourcesContent":["import assert from 'assert';\nimport { Pool, Server } from 'koack';\nimport memoryStorage from 'koack/storages/memory';\n\n['SLACK_CLIENTID', 'SLACK_CLIENTSECRET', 'SLACK_POOL_SIZE', 'SLACK_SCOPE'].map(envVar =>\n  assert(process.env[envVar], `Missing env configuration ${envVar}`)\n);\n\nconst pool = new Pool({\n  size: Number(process.env.SLACK_POOL_SIZE),\n  path: require.resolve('./bot'),\n});\n\nconst server = new Server({\n  pool,\n  scopes: process.env.SLACK_SCOPE.split(','),\n  slackClient: {\n    clientID: process.env.SLACK_CLIENTID,\n    clientSecret: process.env.SLACK_CLIENTSECRET,\n  },\n  storage: memoryStorage(),\n});\n\nserver.listen({ port: Number(process.env.PORT) || 3000 });\n\nconst close = async () => {\n  await server.stop();\n  process.exit(0);\n};\nprocess.on('SIGINT', close);\nprocess.on('SIGTERM', close);\n"]}